services:
  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - ./.env
    command: redis-server --appendonly yes
    environment:
      USERNAME: ${REDIS_USERNAME}
      PASSWORD: ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
    networks:
      - mynetwork
  mysql:
    image: mysql:5.7.44
    container_name: mysql
    env_file:
      - ./.env
    restart: always
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - ./mysql/data/db:/var/lib/mysql
      - ./mysql/data/conf:/etc/mysql/conf.d
      - ./mysql/log:/var/log/mysql
    networks:
      - mynetwork
  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    env_file:
      - ./.env
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
      - ./rabbitmq/log:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - mynetwork
  elasticsearch:
    image: elasticsearch:8.15.1
    container_name: elasticsearch
    env_file:
      - ./.env
    user: elasticsearch:elasticsearch
    environment:
      - "cluster.name=elasticsearch"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
    volumes:
      - ./elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - mynetwork
  logstash:
    image: logstash:8.15.1
    container_name: logstash
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:es
    ports:
      - 4560-4563:4560-4563
    networks:
      - mynetwork
  kibana:
    image: kibana:8.15.1
    container_name: kibana
    links:
      - elasticsearch:es
    depends_on:
      - elasticsearch
    environment:
      - "elasticsearch.hosts=http://es:9200"
    ports:
      - 5601:5601
    networks:
      - mynetwork
  nginx:
    image: nginx:1.27.1
    container_name: nginx
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/log:/var/log/nginx
    ports:
      - 80:80
    networks:
      - mynetwork
  mongo:
    image: mongo
    restart: always
    env_file:
      - ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    container_name: mongo
    volumes:
      - ./mongo/db:/data/db
    ports:
      - 27017:27017
    networks:
      - mynetwork
  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    volumes:
      - ./minio/data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    env_file:
      - ./.env
    ports:
      - 9091:9000
      - 9001:9001
    networks:
      - mynetwork
  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
    env_file:
      - ./.env
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
    networks:
      - mynetwork
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./grafana/:/var/lib/grafana
    env_file:
      - ./.env
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - prometheus
    networks:
      - mynetwork
    user: '0'
  nacos-registry:
    image: nacos/nacos-server:v2.1.0
    container_name: nacos-registry
    environment:
      - "MODE=standalone"
    ports:
      - 8848:8848
    networks:
      - mynetwork
networks:
  mynetwork:
    driver: bridge